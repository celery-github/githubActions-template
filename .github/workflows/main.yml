name: CI/CD Workflow # The name of the workflow.
on: # This section defines when the workflow should be triggered.
  # push: # Trigger the workflow on push events to the main branch.
  #   branches:
  #     - main
  # pull_request:  # Trigger the workflow on pull request events targeting the main branch.
  #   branches:
  #     - main
  # schedule:  # Trigger the workflow on schedule, e.g., every day at midnight.
  #   - cron: '0 0 * * *'
  workflow_dispatch: # Trigger the workflow manually through the GitHub UI.
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
jobs: # This section defines the jobs that will run in the workflow.
  build:  # Define a job named "build" that runs on the latest Ubuntu runner.
    name: Build and Test
    runs-on: ubuntu-latest
    steps: # Checkout the repository code.
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js # Set up Node.js with a specific version.
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies  # Install dependencies.
        run: npm install
      - name: Run tests  # Run tests.
        run: npm test
  deploy:  # Define a job named "deploy" that runs after the "build" job and deploys the code.
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
    steps:  # Checkout the repository code (needed again in the deploy job).
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up AWS CLI  # Set up AWS CLI to deploy the application.
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
      - name: Deploy to AWS  # Deploy the application using a custom script.
        run: ./deploy.sh
  lint: # Define a job named "lint" that runs independently of the "build" and "deploy" jobs.
    name: Lint Code
    runs-on: ubuntu-latest
    steps: # Checkout the repository code.
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js  # Set up Node.js with a specific version.
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies  # Install dependencies.
        run: npm install
      - name: Run linter   # Run linter
        run: npm run lint
  build-docker: # Define a job named "build-docker" that builds a Docker image
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps: # Checkout the repository code.
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx # Set up Docker Buildx for advanced Docker builds.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub  # Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image # Build the Docker image
        run: |
          docker build -t my-app:latest .
      - name: Push Docker image # Push the Docker image to Docker Hub
        run: |
          docker push my-app:latest
